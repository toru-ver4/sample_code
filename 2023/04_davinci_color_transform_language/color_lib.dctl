// Base functions from SMPTE ST 2084-2014

// Constants from SMPTE ST 2084-2014
const float pq_m1 = 0.1593017578125; // ( 2610.0 / 4096.0 ) / 4.0;
const float pq_m2 = 78.84375; // ( 2523.0 / 4096.0 ) * 128.0;
const float pq_c1 = 0.8359375; // 3424.0 / 4096.0 or pq_c3 - pq_c2 + 1.0;
const float pq_c2 = 18.8515625; // ( 2413.0 / 4096.0 ) * 32.0;
const float pq_c3 = 18.6875; // ( 2392.0 / 4096.0 ) * 32.0;

const float pq_C = 10000.0;

// Converts from the non-linear perceptually quantized space to linear cd/m^2
// Note that this is in float, and assumes normalization from 0 - 1
// (0 - pq_C for linear) and does not handle the integer coding in the Annex 
// sections of SMPTE ST 2084-2014
__DEVICE__ float ST2084_2_Y( float N )
{
  // Note that this does NOT handle any of the signal range
  // considerations from 2084 - this assumes full range (0 - 1)
  float Np = _powf( N, 1.0 / pq_m2 );
  float L = Np - pq_c1;
  if( L < 0.0 ){
    L = 0.0;
  }
  L = L / ( pq_c2 - pq_c3 * Np );
  L = _powf( L, 1.0 / pq_m1 );
  return L * pq_C; // returns cd/m^2
}

// Converts from linear cd/m^2 to the non-linear perceptually quantized space
// Note that this is in float, and assumes normalization from 0 - 1
// (0 - pq_C for linear) and does not handle the integer coding in the Annex 
// sections of SMPTE ST 2084-2014
__DEVICE__ float Y_2_ST2084( float C )
//pq_r
{
  // Note that this does NOT handle any of the signal range
  // considerations from 2084 - this returns full range (0 - 1)
  float L = C / pq_C;
  float Lm = _powf( L, pq_m1 );
  float N = ( pq_c1 + pq_c2 * Lm ) / ( 1.0 + pq_c3 * Lm );
  N = _powf( N, pq_m2 );
  return N;
}

__DEVICE__ float3 Y_2_ST2084_f3( float3 in )
{
  // converts from linear cd/m^2 to PQ code values
  
  float3 out;
  out.x = Y_2_ST2084( in.x );
  out.y = Y_2_ST2084( in.y );
  out.z = Y_2_ST2084( in.z );

  return out;
}

__DEVICE__ float3 ST2084_2_Y_f3( float3 in )
{
  // converts from PQ code values to linear cd/m^2
  
  float3 out;
  out.x = ST2084_2_Y( in.x );
  out.y = ST2084_2_Y( in.y );
  out.z = ST2084_2_Y( in.z );

  return out;
}
